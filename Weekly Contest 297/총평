1.
8분 38초
brackets라는 2차원 정수 배열이 주어진다.
brackets[i] = [upper_i, percent_i]
i번째 tax bracket은 upper_i의 상한을 갖고 있고, percent_i로 부과된다.
brackets는 upper bound에 의해 sorting 된다.

tax 계산은 다음과 같다.
-> 첫 upper_0 dollar는 percent_0의 비율로 세금이 부과된다.
-> 그 다음 upper_1 - upper_0 dollar는 percent_1의 비율로 세금이 부과된다.
-> and so on

income이라는 정수가 주어진다. income은 너가 번 돈의 양을 의미한다.
세금을 부과해야 하는 돈의 양을 리턴해라.
오차는 10^-5까지 허용된다.

제한:
해결방법:
단순 구현

2.
30분
m*n 정수 행렬 grid는 
0부터 m*n-1까지의 distinct한 정수로 구성되어 있다.
이 행렬에서 어떤 셀에서 다음 행의 다른 셀로 이동할 수 있다.

단, 마지막 행은 이동이 불가능 하다.

각각의 가능한 move는 2차원 배열의 moveCost로, 비용이 주어진다.
moveCost는 (m*n) * n으로 되어있는데
moveCost[i][j]는 value i 를 가진 셀에서 다음 행의 j열을 가진 cell로의 비용을 의미한다.

grid의 경로 비용은 방문한 모든 셀 값의 합계에 모든 이동 비용의 합계를 더한 값이다.
첫번재 행의 셀에서 시작하여 마지막 행의 셀에서 끝나는 경로의 최소 비용을 반환하여라.

제한:
1) m, n은 2 이상 50 이하.
2) grid는 0부터 m*n-1까지의 정수로 이루어져 있다.
3) moveCost[i][j] 는 100 이하.

해결방법:
1)재귀로 풀어도 될 듯 하다. -> 시간초과
2)DP

3. 28분
정수 배열 cookies가 주어진다. cookies[i]는 i번째 가방에 들어있는 쿠키의 수를 의미한다.
정수 k도 주어지는데, 이는 모든 쿠키 봉지를 배포할 자식 수를 나타낸다.
같은 가방에 들어있는 모든 쿠키는 반드시 같은 아이에게 가야하고, 나눠져서도 안된다.

배표의 부당성은 배포에서 한 아이가 얻은 최대 총 쿠키로 정의된다.

배포의 부당성의 최소를 리턴해라.

제한:
cookies의 길이는 8 이하
cookies[i]는 십만 이하
k는 2 이상 8 이하.

해결방법:

1)파티셔닝 문제. k가 8 이하이므로 직접 일일히 세어 보는 수 밖에 없나?
-> 구간 합은 정렬한 뒤에 Sum배열을 만들면 O(1)에 리턴할 수 있다.
-> cookies도 2 이상 8 이하이다.
-> 해볼 만 하다.
-> 그럼 파티셔닝의 기준을 명확히 세워야 한다.
-> partition [i] = 0부터 i번쨰, i+1번쨰와 마지막을 나눈다는 의미이다.
-> 파티셔닝은 그럼 0부터 cookies.length-2까지 가능하다.
-> 한가지 유의할 점!! sorting 해도 반드시 순열을 통해 구해야 한다!! 순열을 하지 않으면 빼먹는 케이스가 반드시 있다!!

4. 15분에서 중단함.
문제: https://leetcode.com/problems/naming-a-company/discuss/2140967/Count-Pairs
ideas라는 문자열의 배열이 주어진다.
ideas는 이름들의 리스트를 대표하는데,
회사의 이름을 짓는 과정에서 사용된다
이름을 짓는 과정은 다음과 같다.
-> 두개의 "distinct"이름들을 ideas에서 고른다. 이걸 idea_a와 idea_b라고 한다.
-> idea_a와 idea_b의 첫번째 문자를 각각 swap한다.
-> 새로운 이름들이 "두개 모두" original ideas에서 찾을 수 없다면, idea_a + ' ' + idea_b가 새로운 회사 이름이 된다.
-> 그렇지 않으면 타당한 이름이 아니다.
이 때 " distinct" valid name의 개수를 찾아라.

제한:
ideas의 길이는 2 이상 5만 이하
ideas[i]의 길이는 10 이하
ideas는 모두 unique 하다.

해결방법:
일단 ideas의 짝을 모두 찾아야지.
-> 단순히 앞 글자가 같은걸 하나로 통일해서 그 개수가 5라면, 정답이 5 * 4일까? 아니다.
-> a라는 문자열과 b라는 문자열이 앞 부분이 같고, 길이가 다른 문자열도 서로 swap하면 타당하지 않다. 

따라서
-> 앞 문자를 basket으로 놓는다.
-> a인 애들 쭈르륵,, b인 애들 쭈르륵,, 그리고 z인 애들 쭈르륵...
